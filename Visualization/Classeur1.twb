<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='EventsAndClubs_merged' inline='true' name='federated.0jcwdfp0madwtb1dx5rmw0cw914z' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='EventsAndClubs_merged' name='textscan.12qsypb18aulj11h6lbwz1vzqye9'>
            <connection class='textscan' directory='C:/Users/Simon/Documents/EPFL/Master/Semestre1/Applied Data Analysis/SMM/Scripts/FullData' filename='EventsAndClubs_merged.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[EventsAndClubs_merged.csv].[F1]' />
              <expression op='[ArtistDF_withGenres_merged.csv].[F1]' />
            </expression>
          </clause>
          <relation connection='textscan.12qsypb18aulj11h6lbwz1vzqye9' name='EventsAndClubs_merged.csv' table='[EventsAndClubs_merged#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='fr_CH' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='string' name='place' ordinal='2' />
              <column datatype='integer' name='club' ordinal='3' />
              <column datatype='string' name='address' ordinal='4' />
              <column datatype='string' name='location' ordinal='5' />
              <column datatype='string' name='event' ordinal='6' />
              <column datatype='date' name='date' ordinal='7' />
              <column datatype='string' name='artists' ordinal='8' />
              <column datatype='string' name='genre' ordinal='9' />
              <column datatype='string' name='coordinates' ordinal='10' />
            </columns>
          </relation>
          <relation connection='textscan.12qsypb18aulj11h6lbwz1vzqye9' name='ArtistDF_withGenres_merged.csv' table='[ArtistDF_withGenres_merged#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='fr_CH' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Unnamed: 0' ordinal='1' />
              <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
              <column datatype='string' name='artist' ordinal='3' />
              <column datatype='string' name='genres_spotify' ordinal='4' />
              <column datatype='string' name='genres_ra' ordinal='5' />
              <column datatype='string' name='main_genres' ordinal='6' />
              <column datatype='string' name='top3_genres' ordinal='7' />
              <column datatype='string' name='genre' ordinal='8' />
              <column datatype='string' name='all_genres' ordinal='9' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1 (ArtistDF_withGenres_merged.csv)]' value='[ArtistDF_withGenres_merged.csv].[F1]' />
          <map key='[F1]' value='[EventsAndClubs_merged.csv].[F1]' />
          <map key='[Unnamed: 0 (ArtistDF_withGenres_merged.csv)]' value='[ArtistDF_withGenres_merged.csv].[Unnamed: 0]' />
          <map key='[Unnamed: 0.1]' value='[ArtistDF_withGenres_merged.csv].[Unnamed: 0.1]' />
          <map key='[Unnamed: 0]' value='[EventsAndClubs_merged.csv].[Unnamed: 0]' />
          <map key='[address]' value='[EventsAndClubs_merged.csv].[address]' />
          <map key='[all_genres]' value='[ArtistDF_withGenres_merged.csv].[all_genres]' />
          <map key='[artist]' value='[ArtistDF_withGenres_merged.csv].[artist]' />
          <map key='[artists]' value='[EventsAndClubs_merged.csv].[artists]' />
          <map key='[club]' value='[EventsAndClubs_merged.csv].[club]' />
          <map key='[coordinates]' value='[EventsAndClubs_merged.csv].[coordinates]' />
          <map key='[date]' value='[EventsAndClubs_merged.csv].[date]' />
          <map key='[event]' value='[EventsAndClubs_merged.csv].[event]' />
          <map key='[genre (ArtistDF_withGenres_merged.csv)]' value='[ArtistDF_withGenres_merged.csv].[genre]' />
          <map key='[genre]' value='[EventsAndClubs_merged.csv].[genre]' />
          <map key='[genres_ra]' value='[ArtistDF_withGenres_merged.csv].[genres_ra]' />
          <map key='[genres_spotify]' value='[ArtistDF_withGenres_merged.csv].[genres_spotify]' />
          <map key='[location]' value='[EventsAndClubs_merged.csv].[location]' />
          <map key='[main_genres]' value='[ArtistDF_withGenres_merged.csv].[main_genres]' />
          <map key='[place]' value='[EventsAndClubs_merged.csv].[place]' />
          <map key='[top3_genres]' value='[ArtistDF_withGenres_merged.csv].[top3_genres]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>place</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>club</remote-name>
            <remote-type>20</remote-type>
            <local-name>[club]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>club</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>129</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>address</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>event</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>artists</remote-name>
            <remote-type>129</remote-type>
            <local-name>[artists]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>artists</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genre]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>genre</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coordinates]</local-name>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias>coordinates</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[EventsAndClubs_merged.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;CHF&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_CH&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;&apos;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (ArtistDF_withGenres_merged.csv)]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0 (ArtistDF_withGenres_merged.csv)]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>artist</remote-name>
            <remote-type>129</remote-type>
            <local-name>[artist]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>artist</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genres_spotify</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genres_spotify]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>genres_spotify</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genres_ra</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genres_ra]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>genres_ra</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>main_genres</remote-name>
            <remote-type>129</remote-type>
            <local-name>[main_genres]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>main_genres</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>top3_genres</remote-name>
            <remote-type>129</remote-type>
            <local-name>[top3_genres]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>top3_genres</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>genre</remote-name>
            <remote-type>129</remote-type>
            <local-name>[genre (ArtistDF_withGenres_merged.csv)]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>genre</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>all_genres</remote-name>
            <remote-type>129</remote-type>
            <local-name>[all_genres]</local-name>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias>all_genres</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ArtistDF_withGenres_merged.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;CHF&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_CH&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;&apos;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='EventStyle' datatype='string' name='[Calculation_89790555286601728]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [club]==1 then&#13;&#10;    &quot;Club&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Not Club&quot;&#13;&#10;END' />
      </column>
      <column caption='Genre_Displayed' datatype='string' name='[Calculation_89790555359322113]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([genre],&quot;unknown&quot;)' />
      </column>
      <column caption='Artists' datatype='string' name='[Calculation_89790555364462594]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='TRIM(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE([artists],&quot;&apos;&apos;,&quot;,&quot; &quot;)&#13;&#10;,&quot;]&quot;,&quot; &quot;)&#13;&#10;,&quot;[&quot;,&quot; &quot;)&#13;&#10;,&quot;&apos;&quot;,&quot;&quot;)&#13;&#10;,&quot;Live,&quot;,&quot;&quot;)&#13;&#10;,&quot;Dj, &quot;,&quot;&quot;)&#13;&#10;)' />
      </column>
      <column aggregation='CountD' caption='Calcul 2' datatype='string' default-role='measure' default-type='quantitative' name='[Calculation_89790555378126851]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_89790555359322113]' />
      </column>
      <column caption='Valid' datatype='integer' name='[Calculation_89790555380744196]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='F1 (ArtistDF withGenres merged.csv)' datatype='integer' name='[F1 (ArtistDF_withGenres_merged.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Unnamed: 0 (ArtistDF withGenres merged.csv)' datatype='integer' name='[Unnamed: 0 (ArtistDF_withGenres_merged.csv)]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[Unnamed: 0]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal' />
      <column caption='All Genres' datatype='string' name='[all_genres]' role='dimension' type='nominal' />
      <column caption='Artist' datatype='string' name='[artist]' role='dimension' type='nominal' />
      <column caption='Artists_raw' datatype='string' name='[artists]' role='dimension' type='nominal' />
      <column caption='Club' datatype='integer' name='[club]' role='measure' type='quantitative' />
      <column caption='Latitude' datatype='real' datatype-customized='true' name='[coordinates - Scinder 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[coordinates]'>
        <calculation class='tableau' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,1)))' />
      </column>
      <column caption='Longitude' datatype='real' datatype-customized='true' name='[coordinates - Scinder 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[coordinates]'>
        <calculation class='tableau' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,-1)))' />
      </column>
      <column caption='Coordinates' datatype='string' datatype-customized='true' name='[coordinates]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
      <column caption='genre (ArtistDF withGenres merged.csv)' datatype='string' name='[genre (ArtistDF_withGenres_merged.csv)]' role='dimension' type='nominal' />
      <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
      <column caption='Genres Ra' datatype='string' name='[genres_ra]' role='dimension' type='nominal' />
      <column caption='Genres Spotify' datatype='string' name='[genres_spotify]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Main Genres' datatype='string' name='[main_genres]' role='dimension' type='nominal' />
      <column caption='Place' datatype='string' name='[place]' role='dimension' type='nominal' />
      <column caption='Genre1' datatype='string' name='[top3_genres - Scinder 1]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[top3_genres]'>
        <calculation class='tableau' formula='TRIM( REPLACE(REPLACE(REPLACE(SPLIT( [top3_genres], &quot;,&quot;, 1 ),&quot;&apos;&quot;,&quot;&quot;),&quot;[&quot;,&quot;&quot;),&quot;]&quot;,&quot;&quot;))' />
      </column>
      <column caption='Genre2' datatype='string' name='[top3_genres - Scinder 2]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[top3_genres]'>
        <calculation class='tableau' formula='TRIM( REPLACE(REPLACE(REPLACE(SPLIT( [top3_genres], &quot;,&quot;, 2 ),&quot;&apos;&quot;,&quot;&quot;),&quot;[&quot;,&quot;&quot;),&quot;]&quot;,&quot;&quot;))' />
      </column>
      <column caption='Genre3' datatype='string' name='[top3_genres - Scinder 3]' role='dimension' type='nominal' user:SplitFieldIndex='5' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[top3_genres]'>
        <calculation class='tableau' formula='TRIM( REPLACE(REPLACE(REPLACE(SPLIT( [top3_genres], &quot;,&quot;, 3),&quot;&apos;&quot;,&quot;&quot;),&quot;[&quot;,&quot;&quot;),&quot;]&quot;,&quot;&quot;))' />
      </column>
      <column caption='Top3 Genres' datatype='string' name='[top3_genres]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_89790555359322113]' derivation='Attribute' name='[attr:Calculation_89790555359322113:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_89790555359322113]' derivation='None' name='[none:Calculation_89790555359322113:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[coordinates - Scinder 1]' derivation='None' name='[none:coordinates - Scinder 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[coordinates - Scinder 2]' derivation='None' name='[none:coordinates - Scinder 2:ok]' pivot='key' type='ordinal' />
      <column-instance column='[genre (ArtistDF_withGenres_merged.csv)]' derivation='None' name='[none:genre (ArtistDF_withGenres_merged.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[genre]' derivation='None' name='[none:genre:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Artists,Latitude,Longitude,JOUR(Date),Event,Location)' hidden='true' name='[Action (Artists,Latitude,Longitude,JOUR(Date),Event,Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_89790555364462594]' />
          <groupfilter function='level-members' level='[none:coordinates - Scinder 1:ok]' />
          <groupfilter function='level-members' level='[none:coordinates - Scinder 2:ok]' />
          <groupfilter function='level-members' level='[tdy:date:ok]' />
          <groupfilter function='level-members' level='[event]' />
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (Coordinates - Scinder 1,Coordinates - Scinder 2,MOIS(Date))' hidden='true' name='[Action (Coordinates - Scinder 1,Coordinates - Scinder 2,MOIS(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:coordinates - Scinder 1:ok]' />
          <groupfilter function='level-members' level='[none:coordinates - Scinder 2:ok]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Genre1,Genre2,Genre3)' hidden='true' name='[Action (Genre1,Genre2,Genre3)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[top3_genres - Scinder 1]' />
          <groupfilter function='level-members' level='[top3_genres - Scinder 2]' />
          <groupfilter function='level-members' level='[top3_genres - Scinder 3]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude,MOIS(Date))' hidden='true' name='[Action (Latitude,Longitude,MOIS(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:coordinates - Scinder 1:ok]' />
          <groupfilter function='level-members' level='[none:coordinates - Scinder 2:ok]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Simon\Documents\Mon dossier Tableau\Sources de données\EventsAndClubs.tde' schema='Extract' tablename='Extract' update-time='01/28/2017 05:22:19 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Calculation_89790555286601728]' value='[Extract].[Calculation_89790555286601728]' />
            <map key='[Calculation_89790555359322113]' value='[Extract].[Calculation_89790555359322113]' />
            <map key='[Calculation_89790555364462594]' value='[Extract].[Calculation_89790555364462594]' />
            <map key='[Calculation_89790555378126851]' value='[Extract].[Calculation_89790555378126851]' />
            <map key='[Calculation_89790555380744196]' value='[Extract].[Calculation_89790555380744196]' />
            <map key='[F1 (ArtistDF_withGenres_merged.csv)]' value='[Extract].[F1]' />
            <map key='[F1]' value='[Extract].[F11]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Unnamed: 0 (ArtistDF_withGenres_merged.csv)]' value='[Extract].[Unnamed: 0]' />
            <map key='[Unnamed: 0.1]' value='[Extract].[Unnamed: 0.1]' />
            <map key='[address]' value='[Extract].[address]' />
            <map key='[all_genres]' value='[Extract].[all_genres]' />
            <map key='[artist]' value='[Extract].[artist]' />
            <map key='[artists]' value='[Extract].[artists]' />
            <map key='[club]' value='[Extract].[club]' />
            <map key='[coordinates - Scinder 1]' value='[Extract].[coordinates - Scinder 1]' />
            <map key='[coordinates - Scinder 2]' value='[Extract].[coordinates - Scinder 2]' />
            <map key='[coordinates]' value='[Extract].[coordinates]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[event]' value='[Extract].[event]' />
            <map key='[genre (ArtistDF_withGenres_merged.csv)]' value='[Extract].[genre]' />
            <map key='[genre]' value='[Extract].[genre1]' />
            <map key='[genres_ra]' value='[Extract].[genres_ra]' />
            <map key='[genres_spotify]' value='[Extract].[genres_spotify]' />
            <map key='[location]' value='[Extract].[location]' />
            <map key='[main_genres]' value='[Extract].[main_genres]' />
            <map key='[place]' value='[Extract].[place]' />
            <map key='[top3_genres]' value='[Extract].[top3_genres]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_89790555286601728]' formula='IF [club]==1 then&#13;&#10;    &quot;Club&quot;&#13;&#10;ELSE&#13;&#10;    &quot;Not Club&quot;&#13;&#10;END' />
            <calculation column='[Calculation_89790555359322113]' formula='IFNULL([genre],&quot;unknown&quot;)' />
            <calculation column='[Calculation_89790555364462594]' formula='TRIM(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE([artists],&quot;&apos;&apos;,&quot;,&quot; &quot;)&#13;&#10;,&quot;]&quot;,&quot; &quot;)&#13;&#10;,&quot;[&quot;,&quot; &quot;)&#13;&#10;,&quot;&apos;&quot;,&quot;&quot;)&#13;&#10;,&quot;Live,&quot;,&quot;&quot;)&#13;&#10;,&quot;Dj, &quot;,&quot;&quot;)&#13;&#10;)' />
            <calculation column='[Calculation_89790555378126851]' formula='[Calculation_89790555359322113]' />
            <calculation column='[Calculation_89790555380744196]' formula='1' />
            <calculation column='[Number of Records]' formula='1' />
            <calculation column='[coordinates - Scinder 1]' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,1)))' />
            <calculation column='[coordinates - Scinder 2]' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,-1)))' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='38846' timestamp-start='2017-01-28 17:22:19.604' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_89790555380744196</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_89790555380744196]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_89790555380744196</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>38846.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>38846.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1 (ArtistDF_withGenres_merged.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>1</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38846</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>754486435.0</statistic>
                <statistic aggregation='Avg' datatype='real'>19422.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>38845</statistic>
                <statistic aggregation='Stdev' datatype='real'>11214.018615108502</statistic>
                <statistic aggregation='StdevP' datatype='real'>11213.874274754466</statistic>
                <statistic aggregation='Var' datatype='real'>125754213.5</statistic>
                <statistic aggregation='VarP' datatype='real'>125750976.25</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
                <statistic aggregation='Median' datatype='integer'>19423</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19538935207195.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F11</remote-name>
              <remote-type>3</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F11</remote-alias>
              <ordinal>2</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38846</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>754486435.0</statistic>
                <statistic aggregation='Avg' datatype='real'>19422.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>38845</statistic>
                <statistic aggregation='Stdev' datatype='real'>11214.018615108502</statistic>
                <statistic aggregation='StdevP' datatype='real'>11213.874274754466</statistic>
                <statistic aggregation='Var' datatype='real'>125754213.5</statistic>
                <statistic aggregation='VarP' datatype='real'>125750976.25</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
                <statistic aggregation='Median' datatype='integer'>19423</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19538935207195.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>3</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>38846.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>38846.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unnamed: 0</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Unnamed: 0 (ArtistDF_withGenres_merged.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unnamed: 0</remote-alias>
              <ordinal>4</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38846</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>754486435.0</statistic>
                <statistic aggregation='Avg' datatype='real'>19422.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>38845</statistic>
                <statistic aggregation='Stdev' datatype='real'>11214.018615108502</statistic>
                <statistic aggregation='StdevP' datatype='real'>11213.874274754466</statistic>
                <statistic aggregation='Var' datatype='real'>125754213.5</statistic>
                <statistic aggregation='VarP' datatype='real'>125750976.25</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
                <statistic aggregation='Median' datatype='integer'>19423</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19538935207195.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unnamed: 0.1</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Unnamed: 0.1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unnamed: 0.1</remote-alias>
              <ordinal>5</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38846</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>754486435.0</statistic>
                <statistic aggregation='Avg' datatype='real'>19422.5</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>38845</statistic>
                <statistic aggregation='Stdev' datatype='real'>11214.018615108502</statistic>
                <statistic aggregation='StdevP' datatype='real'>11213.874274754466</statistic>
                <statistic aggregation='Var' datatype='real'>125754213.5</statistic>
                <statistic aggregation='VarP' datatype='real'>125750976.25</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
                <statistic aggregation='Median' datatype='integer'>19423</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19538935207195.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>address</remote-name>
              <remote-type>129</remote-type>
              <local-name>[address]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>address</remote-alias>
              <ordinal>6</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>637</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1 Rue de Chantepoulet, 1201 Geneva&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwinglistrasse 12, 8004 Zürich&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5026</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>all_genres</remote-name>
              <remote-type>129</remote-type>
              <local-name>[all_genres]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>all_genres</remote-alias>
              <ordinal>7</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6451</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[&apos;a cappella&apos;, &apos;adult standards&apos;, &apos;cabaret&apos;, &apos;christmas&apos;, &apos;jazz christmas&apos;, &apos;lounge&apos;, &apos;smooth jazz&apos;, &apos;vocal ja&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>artist</remote-name>
              <remote-type>129</remote-type>
              <local-name>[artist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>artist</remote-alias>
              <ordinal>8</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>38844</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;___&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZZZ&apos;s&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38845</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>artists</remote-name>
              <remote-type>129</remote-type>
              <local-name>[artists]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>artists</remote-alias>
              <ordinal>9</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28999</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[&apos;  &apos;]&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;[\&quot;ZZZ&apos;s \&quot;, &apos; support: J. C. Satan &apos;]&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>club</remote-name>
              <remote-type>16</remote-type>
              <local-name>[club]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>club</remote-alias>
              <ordinal>10</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
                <statistic aggregation='Median' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coordinates - Scinder 1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coordinates - Scinder 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coordinates - Scinder 1</remote-alias>
              <ordinal>11</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1260</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>45.720937499999998</statistic>
                <statistic aggregation='Max' datatype='real'>47.697719799999987</statistic>
                <statistic aggregation='Count' datatype='integer'>38811</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coordinates - Scinder 2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coordinates - Scinder 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coordinates - Scinder 2</remote-alias>
              <ordinal>12</ordinal>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1258</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>6.0821549999999993</statistic>
                <statistic aggregation='Max' datatype='real'>10.713421800000001</statistic>
                <statistic aggregation='Count' datatype='integer'>38811</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coordinates</remote-name>
              <remote-type>129</remote-type>
              <local-name>[coordinates]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coordinates</remote-alias>
              <ordinal>13</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1260</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;(45.7209375, 9.205428699999997)&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;(None, None)&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>14</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>2174</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#1993-05-15#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-11-12#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event</remote-alias>
              <ordinal>15</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21675</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-bis-Von-Engeln-usw.&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZZZ&apos;s&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38712</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>genre</remote-name>
              <remote-type>129</remote-type>
              <local-name>[genre (ArtistDF_withGenres_merged.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>genre</remote-alias>
              <ordinal>16</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;african&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;rock&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>17657</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>genre1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[genre]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>genre1</remote-alias>
              <ordinal>17</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;african&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;rock&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>26300</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>genres_ra</remote-name>
              <remote-type>129</remote-type>
              <local-name>[genres_ra]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>genres_ra</remote-alias>
              <ordinal>18</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1992</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[&apos;ambient&apos;, &apos;drone&apos;, &apos;tone&apos;, &apos;rap&apos;, &apos;son&apos;]&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>genres_spotify</remote-name>
              <remote-type>129</remote-type>
              <local-name>[genres_spotify]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>genres_spotify</remote-alias>
              <ordinal>19</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5057</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[&apos;a cappella&apos;, &apos;adult standards&apos;, &apos;cabaret&apos;, &apos;christmas&apos;, &apos;jazz christmas&apos;, &apos;lounge&apos;, &apos;smooth jazz&apos;, &apos;vocal ja&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>20</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>737</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-Alte-Kirche&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zweisimmen&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>33820</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>main_genres</remote-name>
              <remote-type>129</remote-type>
              <local-name>[main_genres]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>main_genres</remote-alias>
              <ordinal>21</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3849</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[&apos;african&apos;, &apos;african&apos;, &apos;pop&apos;, &apos;rock&apos;]&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[place]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>place</remote-alias>
              <ordinal>22</ordinal>
              <family>EventsAndClubs_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>650</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot; Kunstmuseum, Basel&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwingliplatz&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5026</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>top3_genres</remote-name>
              <remote-type>129</remote-type>
              <local-name>[top3_genres]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>top3_genres</remote-alias>
              <ordinal>23</ordinal>
              <family>ArtistDF_withGenres_merged.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>589</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;[&apos;african&apos;, &apos;blues&apos;, &apos;hip hop&apos;]&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;None&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_89790555286601728</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_89790555286601728]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_89790555286601728</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>8</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Club&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Not Club&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>32</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_89790555359322113</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_89790555359322113]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_89790555359322113</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;african&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;unknown&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_89790555364462594</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_89790555364462594]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_89790555364462594</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>28413</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZZ Top ,  Peter Maffay ,  Black Label Society&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_89790555378126851</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_89790555378126851]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_89790555378126851</remote-alias>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LFR_RFR' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;african&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;unknown&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>38846</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;fr_FR&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.607212' measure-ordering='alphabetic' measure-percentage='0.392788' rowDisplayCount='20000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:Calculation_89790555359322113:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;african&quot;</bucket>
            </map>
            <map to='#23ac78'>
              <bucket>&quot;blues&quot;</bucket>
            </map>
            <map to='#2db9a4'>
              <bucket>&quot;avant-garde&quot;</bucket>
            </map>
            <map to='#2eb8bf'>
              <bucket>&quot;asian&quot;</bucket>
            </map>
            <map to='#3ea147'>
              <bucket>&quot;caribbean and caribbean-influenced&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eluveitie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indochine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lilabungalow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nickelback&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Threshold&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xzibit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1995&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DIRK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hakim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khaled&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Motorpsycho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Polar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Silverstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unearth&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;unknown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alborosie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushido&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Efterklang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HIM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kraftwerk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portishead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sting&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Veto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Babyshambles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clawfinger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jukebox&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marteria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orioxy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tomazobi&quot;</bucket>
            </map>
            <map to='#7c72c1'>
              <bucket>&quot;rock&quot;</bucket>
            </map>
            <map to='#84ae2d'>
              <bucket>&quot;classic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clannad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Infunkted&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luumu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noisettes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tindersticks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yellowcard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aloan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C2C&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Electronic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prince&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suffocation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waldorf&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Blackmail&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deicide&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goose&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kassette&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Motek&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Placebo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shantel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tuliaisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aborted&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bluesaholics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hatebreed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Knackeboul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mudhoney&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pommelhorse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slayer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Unheilig&quot;</bucket>
            </map>
            <map to='#ac6cc1'>
              <bucket>&quot;r&amp;b and soul&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beyoncé&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gentleman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kapnorth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meshuggah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pink&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sepultura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tré&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anastacia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cake&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hiromi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Levin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neurosis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puppetmastaz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tafs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Widowspeak&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BAP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fun.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marvin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pablopolar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sarda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;traditional&quot;</bucket>
            </map>
            <map to='#cabc21'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bauchklang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Converge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kadavar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maserati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paramore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Schnellertollermeier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Traktorkestar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bilal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Danzig&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giantree&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kashmir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moira&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pitbull&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seven&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Treekillaz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DevilDriver&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kerouac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Motörhead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plaistow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sido&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turbonegro&quot;</bucket>
            </map>
            <map to='#da6bbb'>
              <bucket>&quot;pop&quot;</bucket>
            </map>
            <map to='#e0302b'>
              <bucket>&quot;hip hop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Classic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Famara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MACY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Once&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rihanna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tingsek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zigitros&quot;</bucket>
            </map>
            <map to='#ef3955'>
              <bucket>&quot;jazz&quot;</bucket>
            </map>
            <map to='#ef641a'>
              <bucket>&quot;folk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Archive&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elijah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hurts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lila&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nguru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Talisman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodkid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Editors&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hausquartett&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Navel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pop&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spectrum&quot;</bucket>
            </map>
            <map to='#f4b921'>
              <bucket>&quot;easy listening&quot;</bucket>
            </map>
            <map to='#f678ad'>
              <bucket>&quot;orchestral&quot;</bucket>
            </map>
            <map to='#f85a84'>
              <bucket>&quot;latin&quot;</bucket>
            </map>
            <map to='#f89417'>
              <bucket>&quot;electronic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beoga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Genetikk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kamikaze&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matisyahu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seeed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ayo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Firewater&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnossi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mariza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tocotronic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zucchero&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Air&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bratsch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helloween&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosheen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nefew&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stereophonics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vein&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:genre (ArtistDF_withGenres_merged.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;electronic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;blues&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;latin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;folk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;caribbean and caribbean-influenced&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;african&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;rock&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;classic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;orchestral&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;pop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;hip hop&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;asian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;r&amp;b and soul&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;jazz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;avant-garde&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:genre:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;easy listening&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;blues&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;jazz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;electronic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;caribbean and caribbean-influenced&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;african&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;r&amp;b and soul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;classic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;latin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;orchestral&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;rock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;folk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;asian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;pop&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;hip hop&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;avant-garde&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_89790555359322113:nk]' palette='cyclic_10_0' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;african&quot;</bucket>
            </map>
            <map to='#28aa6f'>
              <bucket>&quot;blues&quot;</bucket>
            </map>
            <map to='#2bb79f'>
              <bucket>&quot;avant-garde&quot;</bucket>
            </map>
            <map to='#30b9bf'>
              <bucket>&quot;asian&quot;</bucket>
            </map>
            <map to='#459f3b'>
              <bucket>&quot;caribbean and caribbean-influenced&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eluveitie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indochine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lilabungalow&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nickelback&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Redman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Threshold&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Xzibit&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1995&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DIRK&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hakim&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Khaled&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Motorpsycho&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Polar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Silverstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unearth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alborosie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bushido&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Efterklang&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HIM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kraftwerk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nek&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portishead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sting&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Veto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Babyshambles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clawfinger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jukebox&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marteria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orioxy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tomazobi&quot;</bucket>
            </map>
            <map to='#7f72c1'>
              <bucket>&quot;rock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clannad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faela&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Infunkted&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luumu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noisettes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Redwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tindersticks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yellowcard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aloan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;C2C&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Electronic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prince&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Suffocation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Waldorf&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Blackmail&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deicide&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Goose&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kassette&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Motek&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Placebo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shantel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tuliaisia&quot;</bucket>
            </map>
            <map to='#9eb528'>
              <bucket>&quot;classic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aborted&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bluesaholics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dota&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hatebreed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Knackeboul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mudhoney&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pommelhorse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Slayer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Unheilig&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beyoncé&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;easy listening&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gentleman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kapnorth&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meshuggah&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pink&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sepultura&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tré&quot;</bucket>
            </map>
            <map to='#b36cc1'>
              <bucket>&quot;r&amp;b and soul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anastacia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cake&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hiromi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Levin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Neurosis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puppetmastaz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tafs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Widowspeak&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BAP&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fun.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marvin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pablopolar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sarda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;traditional&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bauchklang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Converge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Garou&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kadavar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maserati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paramore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Schnellertollermeier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Traktorkestar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bilal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Danzig&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Giantree&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kashmir&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moira&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pitbull&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seven&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Treekillaz&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;unknown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Blue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DevilDriver&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kerouac&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Motörhead&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plaistow&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sido&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Turbonegro&quot;</bucket>
            </map>
            <map to='#dabb21'>
              <bucket>&quot;country&quot;</bucket>
            </map>
            <map to='#e06db9'>
              <bucket>&quot;pop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Classic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Famara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MACY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Once&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rihanna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tingsek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zigitros&quot;</bucket>
            </map>
            <map to='#e54422'>
              <bucket>&quot;hip hop&quot;</bucket>
            </map>
            <map to='#e93645'>
              <bucket>&quot;jazz&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Archive&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elijah&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hurts&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lila&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nguru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Talisman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodkid&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Abu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Blur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Editors&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hausquartett&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Navel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pop&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spectrum&quot;</bucket>
            </map>
            <map to='#f64c74'>
              <bucket>&quot;latin&quot;</bucket>
            </map>
            <map to='#f88113'>
              <bucket>&quot;folk&quot;</bucket>
            </map>
            <map to='#f8ab1d'>
              <bucket>&quot;electronic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beoga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Genetikk&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kamikaze&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matisyahu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seeed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Travis&quot;</bucket>
            </map>
            <map to='#fe7caa'>
              <bucket>&quot;orchestral&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ayo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Firewater&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnossi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mariza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tocotronic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zucchero&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Air&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bratsch&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eels&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helloween&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosheen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nefew&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stereophonics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vein&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <sort class='manual' column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Réel&quot;</bucket>
            <bucket>&quot;Estimation&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='place' />
        <field-sort-custom-order field='club' />
        <field-sort-custom-order field='address' />
        <field-sort-custom-order field='location' />
        <field-sort-custom-order field='event' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='artists' />
        <field-sort-custom-order field='Calculation_89790555364462594' />
        <field-sort-custom-order field='genre' />
        <field-sort-custom-order field='Calculation_89790555380744196' />
        <field-sort-custom-order field='Calculation_89790555359322113' />
        <field-sort-custom-order field='Calculation_89790555378126851' />
        <field-sort-custom-order field='coordinates' />
        <field-sort-custom-order field='coordinates - Scinder 1' />
        <field-sort-custom-order field='coordinates - Scinder 2' />
        <field-sort-custom-order field='Calculation_89790555286601728' />
        <field-sort-custom-order field='F1 (ArtistDF_withGenres_merged.csv)' />
        <field-sort-custom-order field='Unnamed: 0 (ArtistDF_withGenres_merged.csv)' />
        <field-sort-custom-order field='Unnamed: 0.1' />
        <field-sort-custom-order field='artist' />
        <field-sort-custom-order field='genres_spotify' />
        <field-sort-custom-order field='genres_ra' />
        <field-sort-custom-order field='main_genres' />
        <field-sort-custom-order field='top3_genres' />
        <field-sort-custom-order field='top3_genres - Scinder 1' />
        <field-sort-custom-order field='top3_genres - Scinder 2' />
        <field-sort-custom-order field='top3_genres - Scinder 3' />
        <field-sort-custom-order field='genre (ArtistDF_withGenres_merged.csv)' />
        <field-sort-custom-order field='all_genres' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='OnEvent' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0jcwdfp0madwtb1dx5rmw0cw914z' type='datasource' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Feuille 1' />
      </command>
    </action>
    <action caption='Sélectionner 1 (généré)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Tableau de bord 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Genre_Displayed' />
        <param name='target' value='Tableau de bord 1' />
      </command>
    </action>
    <action caption='Filtre 1 (généré)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Tableau de bord 1' type='sheet' worksheet='Feuille 2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Tableau de bord 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Feuille 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='EventsAndClubs_merged' name='federated.0jcwdfp0madwtb1dx5rmw0cw914z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jcwdfp0madwtb1dx5rmw0cw914z'>
            <column caption='Artists' datatype='string' name='[Calculation_89790555364462594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE([artists],&quot;&apos;&apos;,&quot;,&quot; &quot;)&#13;&#10;,&quot;]&quot;,&quot; &quot;)&#13;&#10;,&quot;[&quot;,&quot; &quot;)&#13;&#10;,&quot;&apos;&quot;,&quot;&quot;)&#13;&#10;,&quot;Live,&quot;,&quot;&quot;)&#13;&#10;,&quot;Dj, &quot;,&quot;&quot;)&#13;&#10;)' />
            </column>
            <column caption='Valid' datatype='integer' name='[Calculation_89790555380744196]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Artists_raw' datatype='string' name='[artists]' role='dimension' type='nominal' />
            <column caption='Latitude' datatype='real' datatype-customized='true' name='[coordinates - Scinder 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[coordinates]'>
              <calculation class='tableau' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,1)))' />
            </column>
            <column caption='Longitude' datatype='real' datatype-customized='true' name='[coordinates - Scinder 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[coordinates]'>
              <calculation class='tableau' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,-1)))' />
            </column>
            <column caption='Coordinates' datatype='string' datatype-customized='true' name='[coordinates]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[coordinates - Scinder 1]' derivation='None' name='[none:coordinates - Scinder 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[coordinates - Scinder 2]' derivation='None' name='[none:coordinates - Scinder 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[genre]' derivation='None' name='[none:genre:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_89790555380744196]' derivation='Sum' name='[sum:Calculation_89790555380744196:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[Action (Artists,Latitude,Longitude,JOUR(Date),Event,Location)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_89790555364462594]' />
              <groupfilter function='level-members' level='[none:coordinates - Scinder 1:ok]' />
              <groupfilter function='level-members' level='[none:coordinates - Scinder 2:ok]' />
              <groupfilter function='level-members' level='[tdy:date:ok]' />
              <groupfilter function='level-members' level='[event]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[mn:date:ok]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[mn:date:ok]</column>
            <column>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[Action (Artists,Latitude,Longitude,JOUR(Date),Event,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' value='#f5eddc' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:genre:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[sum:Calculation_89790555380744196:qk]</rows>
        <cols>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[tmn:date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Feuille 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='EventsAndClubs_merged' name='federated.0jcwdfp0madwtb1dx5rmw0cw914z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0jcwdfp0madwtb1dx5rmw0cw914z'>
            <column caption='Genre_Displayed' datatype='string' name='[Calculation_89790555359322113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([genre],&quot;unknown&quot;)' />
            </column>
            <column caption='Artists' datatype='string' name='[Calculation_89790555364462594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE([artists],&quot;&apos;&apos;,&quot;,&quot; &quot;)&#13;&#10;,&quot;]&quot;,&quot; &quot;)&#13;&#10;,&quot;[&quot;,&quot; &quot;)&#13;&#10;,&quot;&apos;&quot;,&quot;&quot;)&#13;&#10;,&quot;Live,&quot;,&quot;&quot;)&#13;&#10;,&quot;Dj, &quot;,&quot;&quot;)&#13;&#10;)' />
            </column>
            <column caption='Artists_raw' datatype='string' name='[artists]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_89790555359322113]' derivation='Attribute' name='[attr:Calculation_89790555359322113:nk]' pivot='key' type='nominal' />
            <column caption='Latitude' datatype='real' datatype-customized='true' name='[coordinates - Scinder 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[coordinates]'>
              <calculation class='tableau' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,1)))' />
            </column>
            <column caption='Longitude' datatype='real' datatype-customized='true' name='[coordinates - Scinder 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[coordinates]'>
              <calculation class='tableau' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,-1)))' />
            </column>
            <column caption='Coordinates' datatype='string' datatype-customized='true' name='[coordinates]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_89790555364462594]' derivation='None' name='[none:Calculation_89790555364462594:nk]' pivot='key' type='nominal' />
            <column-instance column='[coordinates - Scinder 1]' derivation='None' name='[none:coordinates - Scinder 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coordinates - Scinder 2]' derivation='None' name='[none:coordinates - Scinder 2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[event]' derivation='None' name='[none:event:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[yr:date:qk]' included-values='in-range'>
            <min>2001</min>
            <max>2011</max>
          </filter>
          <slices>
            <column>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[yr:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 1:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 2:qk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:event:nk]' />
              <lod column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555364462594:nk]' />
              <color column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[attr:Calculation_89790555359322113:nk]' />
              <lod column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[tdy:date:qk]' />
              <lod column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:location:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Event:&#9;</run>
                <run bold='true'>&lt;[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:event:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Artists:&#9;</run>
                <run bold='true'>&lt;[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555364462594:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Jour de Date:&#9;</run>
                <run bold='true'>&lt;[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[tdy:date:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Genre:&#9;</run>
                <run bold='true'>&lt;[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[attr:Calculation_89790555359322113:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='150' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 1:qk]</rows>
        <cols>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 2:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Feuille 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='EventsAndClubs_merged' name='federated.0jcwdfp0madwtb1dx5rmw0cw914z' />
          </datasources>
          <datasource-dependencies datasource='federated.0jcwdfp0madwtb1dx5rmw0cw914z'>
            <column caption='Genre_Displayed' datatype='string' name='[Calculation_89790555359322113]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([genre],&quot;unknown&quot;)' />
            </column>
            <column caption='Artists' datatype='string' name='[Calculation_89790555364462594]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='TRIM(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE(&#13;&#10;REPLACE([artists],&quot;&apos;&apos;,&quot;,&quot; &quot;)&#13;&#10;,&quot;]&quot;,&quot; &quot;)&#13;&#10;,&quot;[&quot;,&quot; &quot;)&#13;&#10;,&quot;&apos;&quot;,&quot;&quot;)&#13;&#10;,&quot;Live,&quot;,&quot;&quot;)&#13;&#10;,&quot;Dj, &quot;,&quot;&quot;)&#13;&#10;)' />
            </column>
            <column caption='Valid' datatype='integer' name='[Calculation_89790555380744196]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Artists_raw' datatype='string' name='[artists]' role='dimension' type='nominal' />
            <column caption='Latitude' datatype='real' datatype-customized='true' name='[coordinates - Scinder 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[coordinates]'>
              <calculation class='tableau' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,1)))' />
            </column>
            <column caption='Longitude' datatype='real' datatype-customized='true' name='[coordinates - Scinder 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[coordinates]'>
              <calculation class='tableau' formula='FLOAT(TRIM(SPLIT(&#13;&#10;   REPLACE( REPLACE([coordinates], &quot;(&quot; , &quot;&quot;), &quot;)&quot;,&quot;&quot;)&#13;&#10;,&quot;,&quot;,-1)))' />
            </column>
            <column caption='Coordinates' datatype='string' datatype-customized='true' name='[coordinates]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_89790555380744196]' derivation='Sum' forecast-column-base='[sum:Calculation_89790555380744196:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_89790555380744196:qk]' pivot='key' type='quantitative' />
            <column caption='Genre' datatype='string' name='[genre]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_89790555359322113]' derivation='None' name='[none:Calculation_89790555359322113:nk]' pivot='key' type='nominal' />
            <column-instance column='[coordinates - Scinder 1]' derivation='None' name='[none:coordinates - Scinder 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[coordinates - Scinder 2]' derivation='None' name='[none:coordinates - Scinder 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_89790555380744196]' derivation='Sum' name='[sum:Calculation_89790555380744196:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[Action (Artists,Latitude,Longitude,JOUR(Date),Event,Location)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_89790555364462594]' />
              <groupfilter function='level-members' level='[none:coordinates - Scinder 1:ok]' />
              <groupfilter function='level-members' level='[none:coordinates - Scinder 2:ok]' />
              <groupfilter function='level-members' level='[tdy:date:ok]' />
              <groupfilter function='level-members' level='[event]' />
              <groupfilter function='level-members' level='[location]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[Action (Artists,Latitude,Longitude,JOUR(Date),Event,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555359322113:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[fVal:sum:Calculation_89790555380744196:qk]</rows>
        <cols>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[tyr:date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Histoire 1' type='storyboard'>
      <style />
      <size maxheight='1189' maxwidth='2259' minheight='1189' minwidth='2259' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='5213' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='9167' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='5213' />
            <zone h='85284' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='14380'>
              <flipboard active-id='3' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Feuille 2' id='3'>
                    <currentDeltas>
                      <worksheet name='Feuille 2'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 1:qk]' field-type='quantitative' max='6108400.8261368042' min='5599635.965870671' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 2:qk]' field-type='quantitative' max='1523679.7946730577' min='458260.26441938389' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Tableau de bord 1'>
      <style />
      <size maxheight='1068' maxwidth='1366' minheight='1068' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='EventsAndClubs_merged' name='federated.0jcwdfp0madwtb1dx5rmw0cw914z' />
      </datasources>
      <datasource-dependencies datasource='federated.0jcwdfp0madwtb1dx5rmw0cw914z'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='22' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='16' param='horz' type='layout-flow' w='88287' x='0' y='0'>
              <zone h='100000' id='9' param='horz' type='layout-flow' w='88287' x='0' y='0'>
                <zone h='100000' id='18' type='layout-basic' w='88287' x='0' y='0'>
                  <zone h='100000' id='6' param='vert' type='layout-flow' w='88287' x='0' y='0'>
                    <zone fixed-size='441' h='41292' id='4' is-fixed='true' type='layout-basic' w='88287' x='0' y='0'>
                      <zone h='41292' id='3' param='vert' type='layout-flow' w='88287' x='0' y='0'>
                        <zone h='41292' id='10' param='horz' type='layout-flow' w='88287' x='0' y='0'>
                          <zone h='41292' id='11' param='vert' type='layout-flow' w='88287' x='0' y='0'>
                            <zone h='41292' id='12' name='Feuille 2' w='88287' x='0' y='0'>
                              <layout-cache minheight='258' minwidth='202' type-h='scalable' type-w='scalable' />
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='58333' id='19' param='vert' type='layout-flow' w='88287' x='0' y='41292'>
                      <zone h='58333' id='20' name='Feuille 3' w='88287' x='0' y='41292'>
                        <layout-cache minheight='206' type-h='scalable' type-w='fixed' />
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='21' is-fixed='true' param='vert' type='layout-flow' w='11713' x='88287' y='0'>
              <zone h='7586' id='24' name='Feuille 2' param='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:date:qk]' type='filter' w='11713' x='88287' y='0' />
              <zone fixed-size='581' h='55151' id='23' is-fixed='true' name='Feuille 3' pane-specification-id='0' param='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555359322113:nk]' type='color' w='11713' x='88287' y='7586' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Tableau de bord 1'>
      <viewpoints>
        <viewpoint name='Feuille 2' />
        <viewpoint name='Feuille 3'>
          <zoom type='entire-view' />
          <highlight field='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555359322113:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Histoire 1'>
      <viewpoints />
      <active id='5' />
    </window>
    <window class='worksheet' name='Feuille 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card param='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[yr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[attr:Calculation_89790555359322113:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[attr:Calculation_89790555359322113:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555364462594:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:artists:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 1:qk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 2:qk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:date:qk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:event:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:location:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:place:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Feuille 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:genre:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555364462594:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 1:qk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:coordinates - Scinder 2:qk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:genre:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:location:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:main_genres:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:top3_genres - Scinder 1:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:top3_genres - Scinder 2:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:top3_genres - Scinder 3:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:top3_genres:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[sum:Calculation_89790555380744196:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Feuille 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555359322113:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[none:Calculation_89790555359322113:nk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[tyr:date:ok]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[tyr:date:qk]</field>
            <field>[federated.0jcwdfp0madwtb1dx5rmw0cw914z].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Feuille 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feuille 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Feuille 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAO9UlEQVR4nO3dSW9bWXrG8f+9nGdSEqnJkmzL7UGyXZWpO+hFepNlkCyyCRr5APkcyS7I
      rpEEqCBAvkaAoIEUCqiqpCrVNdiyrMGWqIEUZ16Sl3c8WdhdSWAhCSi1fAvn/a1N3SOAjy95
      zqP3GkophRCaMt/3AoR4nyQA4n9QSvG/fSgIXJvGReeSF/o0W913flYYhu/8vP/rGjdJAiC+
      p1TA3/71X/LVfoNht8PRq336I5vWRZPd3ZcEoeKrzz/BIcF0PGDv8Pj7N/PxwTP+5ZMvGPXb
      HB6fo5Ri/+uP+au/+QV/99E/YbseL559S39k848f/YJf7RwyGXbZf33yXsNgyHcA8WtW84B/
      22sxHlgsmCOsZInWwMXvHlPKxigsbtAeuvjOlKQ/JB4zePyzPyHd2+HTlxfYYZzYsIFpmPzh
      n/6c4cFnWKVtks0vCOYf8uzTX9Lzk6SDHr/7B3/E889/iangp3/8c9YqmffyO8sdQHzvu6+/
      Zue7b3ix+xKSGX78k98jETOoLm/wdOsunu/w4tl3xDMZ+t0GjZ5F3ATfD1BhSKigc16nP3Iw
      3v6/uvPtV3z29RFh+zVmaYV0wmC5WsP1fLqtMzqjCehwB1BKYRjGTVxKzKjTbjO3sMCg1yEM
      DQrlEv3+kJgBmaRBEM/SPTsiVaxSzpgcHDe4/+BHxA1F/eiQdGGebDzk+GLAg3t3cMZDXuy/
      4s69B5QycQ5fn1IqFyjl0hyddVmtFXh10ubB/U1i5vt5b9xYAIIgIBaL3cSlhPh/k49AQmsS
      AKE1CYDQmgRAaE0CILQmARBakwAIrUkAhNZmDoBSCt/3CJVChSGu6xKEISoM8f0AgCDwCcPw
      2hYrxHWLz/rCQfOMc8vGdwNKSYNpLE6tusj56wMUIbVbtzk9rqNiMT54vHWdaxbi2swcAIAg
      CJnYAxbnl7EHE8bDISpd5N5Kkd3nB8zd28Y/r+OEIbFLeuFCvG8zd4ECz2HqBdSPT1iszZNK
      JajXm4SBR7mQJEwWGI1dfGfE1tYjQukCiQiaOQAqDDg/O2dhaYWY8jhrtllZWcF3xgzGHrWF
      Cv1ui1i6QCGbljKciCRpgwqtyTao0JoEQGhNAiC0JgEQWpMACK1JAITWrtQFch2HIHwzGMlx
      nDeTwIIA1/UA8DwXP5AukIiumasQ/eYprbGHM3UpZQx8YhDL4gxbGCbML69xfnJGaBrSBRKR
      NXMADMPE9Twm9oAUFe5v32Fv5xkqXWRzpcju80Mq0gUSETdzAApz86xnC5ydGSTMgE63i5Es
      YUxHtFou8+trDNtNfHxSpkmolJwEi8i5Uheo2bxgvrZI3FBctNpUazV8x2Y48ViYKzHsdzBT
      efKZlFQhRCRJF0hoTbZBhdYkAEJrEgChNQmA0JoEQGhNAiC0dqUu0NSe4PkBYeBhWRau5xP4
      HvbUAcB1pnhvZwQJEUUznwSPu3XqPfCnI4qpBEY2R8WMc3K4TywO5doqzfMmIYqn0gUSETVz
      ABKpPOPBMclUmlwxS6dvYYQKlS5we6XI7vNXlKULJCJu5gAM211qt9bpXpxgxlMs1tJctPoY
      3pRm02FhY53+xTmBdIFEhM3eBVKKfrdNKlciFYdOd8BCdYHAnTKa+lRKBUbDPmYySzadlCqE
      iCTpAgmtyTao0JoEQGhNAiC0JgEQWpMACK1JAITWrtQFGo/e9H+UCrEs681zwzyX8cQGYGqP
      cTz/2hYrxHWb+Rxg1D7m1IrhjfsU0nFiqQyOH8Mdd0nGTfILi7SaHQICnm5vyRNiRCTN3gVK
      57CO6iRTaRzH5P69W2/mAqUKrEkXSPxAzN4F6vRZWFml126QShs0Gg3MdAVjPODs3KZ6e4Nu
      81S6QCLSrtQFGvZ7JLMF0skY/d6AUqVM4DlMHJ9SIc94NMRMZMikElKFEJEkXSChNdkGFVqT
      AAitSQCE1iQAQmsSAKE1CYDQ2swHYZ4zZWCNMOMJSrk0vYFFNl8kaSomrk8xn2MytjATadLJ
      xHWuWYhrM3MAAAwDDvYPqZYKZOYqGChevtwjkzSZVKp02gOC0OXJtswFEtF0hblAaRJWl+WN
      u2SY0G63mI4mkMqzKl0g8QMxcwCUUpy2Bjx8tEKv7VAplxhYU0xnzMnphNqd27TP64TSBRIR
      dqUukO/7JBIJwsBnaI0ploqEvsvUDcjnstiTEWY8RSopXSARTdIFElqTbVChNQmA0JoEQGhN
      AiC0JgEQWpMACK1JAITWZj4Jtq0Bx2cNLjp9frS+SM+aUKjUsHtNpp7P+t1Njg4OMZJpHj+6
      f51rFuLazByATKHE7dWAeKbEcGDxaOshey+e48XyPFgvsvtij/Kdh/jNE9wwxJQukIigK7RB
      Fa/rDe49fMSr3T6OO0XFMhi+w3hkUVhYwBtbeAQkTBMlXSARQVfqAlnDEcVSAd+dcnxyzq31
      Ddxxn47lsL66RPP8hHimxEKlKFUIEUnSBRJak10goTUJgNCaBEBoTQIgtCYBEFqTAAitSQCE
      1mY+CQ7cCTsvX1NZqMJ4wMAPWFxapXP6GsfzWbt7j6ODA4xkmidbD65zzUJcm5kD0KkfESZS
      jEYjCukYMT/Ad2z8RJ4HG0V2d14yd3cLr1GXLpCIrJkDkC3lKfkFrP4phdIai0sp9vZeYSiD
      kTWkWKvhjAZ4hnSBRHRdqQt0cX5CLFsmn4TT8za31tfx7SFdy+HWyiKtximxbJn5Ul6qECKS
      pAsktCa7QEJrEgChNQmA0JoEQGhNAiC0JgEQWpMACK1doQs0Zmf3iEq1iuFaDMZTcqUqdq+B
      6wfcurvJ8cEhJFI83X54nWsW4trM3gU6PiJMprAsC9MN3s4FekaQLPDgdpHdnT3mNrfw5Blh
      IsJmDkCuUqTo5hj1z0jHTOypjYrnMbwp1hBKi4s4wz6e4ZOULpCIqCt1gX7d9ankkhzXz97M
      BZoM6Fouq8tV2s0zYtkyc8WcVCFEJEkXSGhNdoGE1iQAQmsSAKE1CYDQmgRAaE0CILQmARBa
      m/kk2HdGfPkfOyyvr2PYQ4ZByNLSKu36IW4QsHpnk+ODV5BM8sH2o+tcsxDXZuYAqNAnVcjj
      ulPy2SRxa4prjwlSRR6svOkCzW9u40sXSETYzCfB07GFiqc53H/BrdU1crk0+/tHhKGiVklh
      qxRTz8Cz+zx89AglJ8EigmbvAoUBJ/VjSgvLZOIh9dML1jfW8WyLruWysrRA5+KceLZMuZCV
      KoSIJOkCCa3JLpDQmgRAaE0CILT27jaoUuw8+4aR7QJQrC7x4PbaTa9LiBtx6R1goVrjsy9/
      xcpyjc///YubXpMQN+bdABgG1doSv7W5zMcff8L62t33sCwhbsa7AVCK73Z3UfEE2VyeZGrm
      w2IhIu/Sd/fw4pTB2CMWixGLXf492Xcsvvhyh5WNDUzPwrJdMoV5pr0GXhCw8t+6QB8+3vqN
      /hJCzOrSAPzkpz/D6nc4abTIVyqXvlCFIZliAcexUbb6fi5QmC696QI932fhnnSBRLRdfhKs
      Qv7+Hz5iaXmN5sDiL/78z975J/ZoQP38gqnjM59PMrQdcsV5Jv0L/CBkZW2d4+M6ZizJk8cP
      CeUkWETQpQFQSnF2esqgXcdN1vhwa/PKF5IqhIiiSz8CffvV5+y9PiWTK/Lj339y02sS4sZc
      +g33yYc/5neebjHpN/nnf/30ptckxI259CPQN198yjRe5LefbhE3jWu5kHwEElEkdWihNSnD
      Ca1JAITWJABCa1cKQOg7dDpDnPGQ3d1dOoMR9mjA6XkLpRTt5hl9a3JdaxXi2l3pARmvD3aZ
      TBNkUorVO3dIxgyeP9v9r6kQvok36fFoa0umQohImrnqOem1MDMVDHtItTpH/fUhBiZGKkOp
      XKSx84ry5jaJyQhXukAiomYfjBVP4NttWu0289UcYRiSSGaJj7vs7ve5df8+xwe7kEpx2zQJ
      5RlhIoLkHEBoTXaBhNYkAEJrEgChNQmA0JoEQGhNAiC0JgEQWrtSAJRS+H6AUgrXdVFKEYYB
      nucD4PseQRBey0KF+E24wtQrxfnxAY1OQLVi4gQQS+aZDlpgKBZW1zk7PkXFTD6QuUAiomYO
      gDcdMTXS5FIu9iTg/vYmezvPUOki91aK7D4/ZE7mAomImzkA1sDCmVicn3VYX1+g1+tBsoQx
      HdFue8yv3WLYuSDAJyVdIBFRV+sCKcV06pJKxWk0WywuLeJPJwwmHtX5MoNem1iqQD6bki6Q
      iCQpwwmtyTao0JoEQGhNAiC0JgEQWpMACK1JAITWZg6AUoqpPcH3A8LAZzwe4/k+YeDjOG8e
      seq5Dr4fXNtihbhuM58E+86EVrtLtzegnEmh0hnm5uY4PTzAjCkqi7donDVQBjyVLpCIqJkD
      kEhlUe4pykyQLWbo9scMDQOVLnBnpcju81dUpAskIm7mANiTEaXqMv36EfF4muWlLOeNLobv
      cnHhsrC+Rr/VkC6QiLTZRyOGPhcXLfKlOdIJg1a7T61WxXdtLNtnvlLEGnQxkzlyGekCiWiS
      LpDQmmyDCq1JAITWJABCaxIAoTUJgNCaBEBo7UpdoPHIwvV8lAoZjcYopQh8j4k9BcCZ2rhv
      ZwQJEUUznwP4zphmZ0i73aGcS2Ak0nhhHNfqEo8bFKvLXDRahIQ8fbxFKOcAIoJmrkLEk1kC
      +00XyJma3N9cezsXqMDG2y5QWbpAIuJmvgPYYwvbDaifnlBKJ8gUSowmPu5kQC4dI1mYp9uz
      CAOH7a1HcgcQkXSFLlBAp9MhWyiTScbp9vpU5ioErsPY8SgXC4ysAbFEhkw6KVUIEUnSBRJa
      k21QoTUJgNCaBEBoTQIgtCYBEFqTAAitXbELNGTqeASeS7fbxXZcfM9hNJ4Ab/5w3nGlCySi
      6wqPSBrTH05od15TSmdIlcukw5CXe/ukEwajuUXarS6h8nmyLXOBRDTNPhconcMM2uSLcxSy
      Ju1uB892IJXnlnSBxA/EzAGY9E456zvcXZ9DeVPmKmX6gwmGY3N6ZlO7vUG7cUIoc4FEhM1c
      hQg8h97AwownKBey9IdjyuUSoecycX2K+RyTsYWZSJNOJqQKISJJukBCa7INKrQmARBa+09T
      uy7fmhJHIQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Histoire 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9a4xtW1Ye9q3nftb7ceo877uv6U67O054tROwbAgIJ4psLEMShEMUydCA
      LbCIHwmCBGGcBBEJDBgU08iEhASIQSQ/DBgBCTQGBbqh+3ZD3773nnPuOVWnqna9dtV+rVd+
      rP3N+taouc+9ODj+cWpKpdp77bXmY8zx+MaYY84VVFVV4bpcl2e0hP+6O3Bdrsu/znItANfl
      mS7XAnBdnulyLQDX5ZkuDQGoRof43h//aff95OEf4H/+uV8FAPzUR74XnxlMvJVcnAywOzh9
      akNvfuw38dP/x//9x+tdVSGfjvALP/MT+Jn/85f/eM9el+vyLkqsX6piis/cf9t9z8ZnePj4
      AADwVf/p3wIQAKhQVUBVVQiCAABw/+O/hY+OVvF1X/aFCIJgftdlCYIAz3/gC/H8B+CeX1RY
      57xD+KEf/Ie4e+cG3nz7yf+ngV6X6+IrVyFQVaEsS5RlCY2Q/sA/+NvYGwHn+w/xt/7mN+HD
      3/iN+Nbv+j5MTx7ie37oI/j5H/sBfMM3fhPeOJnijz72m/imD389Pvzhb8D3//jPoKoqvPWb
      v4T/8ef/LwAVvvNvfwd+96O/hG/6G38T+xc5fvojP4APf/jD+IZv/hZ8+uGh9C7G3/jW/wJ/
      7gs++P8DKa7Ls1hie+EPP/rL+IZv+EMAQDY6xatf+JWN39/6zCew+sIH8G1f81ewtb6COIrw
      977x6/DR0Rr+sy//EKqywH/5v/ws/v73/SCW2xF+9L//dvzB/S/BktSRD/fw2l6OH/j+78dw
      95P45KCDH/rhH8bJ4z/CP/zJn8W3f9tf/1c66OtyXViuCMCrH/pS/Mh3fAsA4OCPfgM/9suP
      G7+/7wu+FI8O/yl++Pv+AU7yDv7b7/nOxu9VOUOULGOlU1f9nldfxJMnew0BiPs38FV/6SsQ
      BsDx24+xt/sWfvRHfgSoSvR7nT/RAV6X6/K08seOAu3tPsR7P//P4zu+67vxUn+Kx8MM/V4H
      u289RJ5nKIMUbZzj46+/jfH5MX7pVz+GV19+vllJEIBQf/vlV9CNU/zV//hr8de+9mvwpV/0
      IXdbRThWle7z9cL1dfmTLA0LEEQt/KkX7rrvaXcFz93OAQB3n3sJrQioQuAnfuwHcf/RAH/2
      y/4DvLiWovrAh7Dx6/8DvuXb/i7+zn/99/HN3/Kt+JF/9I/wkeMJ/vJ/8tdxb6OD3ZV13EIK
      AHjhpRdAV7e79hz+2l/6d/A93/l3UCVL+Ir/8K+69icnj/Etf/e73PcPf/i38K1/77vxnnsr
      /6rocV2esRJc5wJdl2e5XC+EXZdnulwLwHV5psu1AFyXZ7pcC8B1eabLtQBcl2e6XAvAdXmm
      y7UAXJdnulwLwHV5psu1AFyXZ7pcC8B1eabLtQBcl2e6XAvAdXmmy7UAXJdnulwLwHV5psu1
      AFyXZ7pcC8B1eabLtQBcl2e6XAvAdXmmy7UAXJdnulwLwHV5psu1AFyXZ7pcC8B1eabLtQBc
      l2e6XAvAdXmmy7UAXJdnulwLwHV5psu1AFyXZ7pcC8B1eabLtQBcl2e6XAvAdXmmy7UAXJdn
      ulwLwHV5pkvzNalVhdlsBnut8epST/mXvUevVagAzF+xOn9nRxAEzXvM53db3m3fnjaORW2/
      U9322XdT/qTuVzr+y7SldLHFd/1pfVh0z6K5fqf+P23Mdp4s/+g9V16SNxwO3Y+8uaoqhGHo
      HszzHHEcu0qzLEOaplc6wvvjOMbZ2RnW1tZQFAXyPG/UmxX1a5gqVEiSFAHqNxKnSYqDgwOs
      r6+7V7eyFGUBACirqq6zLBqDC+a/hUGATqsDzNvylaK4fDaKosb7yKIoQhAEKIrC0UD7kiQJ
      yrJEGIYLmYK/sw6dkDzPkSSJq5cljuMGjcIwxPHxMTY2NlzfWM9wOES/33d1sL7xeIw4jmt6
      LBDeRYJt513fz8b+kA7kBVsffyfd2Q+9RtoHQYDZbIY0TRvPW97jb3meN2jJonVbASjLElEU
      IcsyxHGMdrvth0D6YBzHaLVajQnWBsqydA3oPSpEANDr9TAYDNw9QRC4etI4QRRGyPIco/EI
      09kUAWpCFUXhiKSTUFYVgiBEFIZI4hhxGNV9CMJL5g9DVADKsnATxoktisLVFUWR678ygR0z
      +xzHMdI0RZIkjYnn56IovEzE35WBWQfv58SQsSiER0dH2NzcxGQyQZ7nTpEURYF+v4/hcOj6
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Tableau de bord 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
